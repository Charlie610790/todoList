"use strict";function updateChoreList(a){$.post("http://tiny-pizza-server.herokuapp.com/collections/CharlieToDoList",a)}var Chore=Backbone.Model.extend({initialize:function(){this.on("change",function(){})},defaults:{chore:""},idAttribute:"_id"}),ChoreCollection=Backbone.Collection.extend({model:Chore,url:"http://tiny-pizza-server.herokuapp.com/collections/CharlieToDoList"}),ChoreView=Backbone.View.extend({template:_.template($(".chore-list-item").text()),editTemplate:_.template($(".chore-list-edit-item").text()),events:{"click .edit-button":"showEdit","click .save-button":"saveChanges","click .delete-button":"destroy","keydown input":"checkForChanges","click .choreName":"done"},initialize:function(){this.listenTo(this.model,"change",this.render),$(".writingSpace").prepend(this.el),this.render()},render:function(){var a=this.template(this.model.attributes);this.$el.html(a)},showEdit:function(){var a=this.editTemplate(this.model.attributes);this.$el.html(a)},saveChanges:function(){var a=this.$el.find(".choreName input").val();this.model.set("chore",a),this.model.save()},destroy:function(){this.model.destroy(),this.remove()},checkForChanges:function(){this.model.get("chore")!==this.$el.find(".choreName input").val()?this.$el.find(".choreName input").addClass("changed"):this.$el.find(".choreName input").removeClass("changed")},done:function(){this.$el.find(".done").toggleClass("doneClicked")}}),ChoreView2=Backbone.View.extend({initialize:function(){console.log("initializing view"),collection.on("add",this.render,this),collection.on("reset",this.render,this),this.render()},render:function(){var a=this.template(this.model.attributes);this.$el.html(a)}}),coolChores=new ChoreCollection;coolChores.fetch().done(function(){coolChores.each(function(a){new ChoreView({model:a})})}),$(".newChoreButton").click(function(){outgoingChore=new Chore,updateChoreList(outgoingChore)});